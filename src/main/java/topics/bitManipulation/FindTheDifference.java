package topics.bitManipulation;

/*
You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.


Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"
 */

//leetCode #389
public class FindTheDifference {

    /*
    Original approach, still very fast O(1) space, O(N) time
    */

    public char findTheDifference(String s, String t) {
        int[] chars = new int[256];
        for (char c : t.toCharArray()) {
            chars[c]++;
        }

        for (char c : s.toCharArray()) {
            chars[c]--;
        }

        for (int i = 0; i < chars.length; i++) {
            if (chars[i] > 0) {
                return (char)i;
            }
        }

        return 'a';
    }

    /*
    Solution using bitwise ^ operator
    */
    public char findTheDifferenceBits(String s, String t) {
        char c = 0;
        for (int i = 0; i < s.length(); ++i) {
            c ^= s.charAt(i);
        }
        for (int i = 0; i < t.length(); ++i) {
            c ^= t.charAt(i);
        }
        return c;
    }

}
